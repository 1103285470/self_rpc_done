package com.sdp.self_rpc_done.serviceProviderExp;import com.sdp.self_rpc_done.protoEntity.request;import com.sdp.self_rpc_done.protoEntity.response;import com.sdp.self_rpc_done.publicInterface.IMessageHandler;import com.sdp.self_rpc_done.publicInterface.MessageOutput;import com.sdp.self_rpc_done.publicInterface.SelfRequest;import com.sdp.self_rpc_done.publicInterface.SelfResponse;import io.netty.channel.ChannelHandlerContext;public class ExpRequestHandler implements IMessageHandler<request.SelfReq> {    @Override    public void handle(ChannelHandlerContext ctx, String requestId, request.SelfReq message) {        int base = message.getBase();        int exp = message.getExp();        long start = System.nanoTime();        long res = 1;        for (int i = 0; i < exp; i++) {            res *= base;        }        long cost = System.nanoTime() - start;        // 输出响应        response.SelfRsp.Builder builderRsp = response.SelfRsp.newBuilder();        builderRsp.setValue(res);        builderRsp.setCostInNanos(cost);        response.ResponseBody.Builder builderBody = response.ResponseBody.newBuilder();        builderBody.setRequestId(requestId);        builderBody.setType("exp_res");        response.ResponseBody build = builderBody.setReq(builderRsp.build()).build();        ctx.writeAndFlush(build);    }}