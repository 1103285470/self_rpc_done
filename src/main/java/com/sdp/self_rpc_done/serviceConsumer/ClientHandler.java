package com.sdp.self_rpc_done.serviceConsumer;import com.sdp.self_rpc_done.protoEntity.response;import com.sdp.self_rpc_done.publicInterface.MessageOutput;import com.sdp.self_rpc_done.publicInterface.SelfRequest;import io.netty.channel.ChannelHandlerContext;import io.netty.channel.ChannelInboundHandlerAdapter;import io.netty.channel.SimpleChannelInboundHandler;/*************************************************** * Copyright (C) didi_global                       * FileName:         ClientHandler                       * Author:           Sun Dongpo                    * Date:             2020/4/4 下午12:11               * Description:      客户端的请求处理器                * Tele:             15029155474                   * mail:             sundongpo_i@didiglobal.com    ************************************************** */public class ClientHandler extends SimpleChannelInboundHandler<response.ResponseBody> {    private ChannelHandlerContext ctx;    @Override    public void channelActive(ChannelHandlerContext ctx) throws Exception {        System.out.println("[server client ] running ...");        this.ctx = ctx;    }    @Override    public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {        System.err.println("出现了异常:"+cause.getMessage());        ctx.close();    }    @Override    protected void channelRead0(ChannelHandlerContext ctx, response.ResponseBody msg) throws Exception {        /*System.out.println(msg.getRequestId());        System.out.println(msg.getType());        System.out.println(msg.getReq().getValue());        System.out.println(msg.getReq().getCostInNanos());*/        System.out.println(msg.toString());    }}