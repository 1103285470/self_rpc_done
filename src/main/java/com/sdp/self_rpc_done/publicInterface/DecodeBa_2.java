package com.sdp.self_rpc_done.publicInterface;import com.sdp.self_rpc_done.protoEntity.response;import io.netty.buffer.ByteBuf;import io.netty.channel.ChannelHandlerContext;import io.netty.handler.codec.ReplayingDecoder;import java.util.List;/*************************************************** * Copyright (C) didi_global                       * FileName:         decodeBa                       * Author:           Sun Dongpo                    * Date:             2020/4/22 7:07 PM               * Description:                      * Tele:             15029155474                   * mail:             sundongpo_i@didiglobal.com    ************************************************** */public class DecodeBa_2 extends ReplayingDecoder<Void> {    /*   @Override       protected void decode(ChannelHandlerContext channelHandlerContext, ByteBuf byteBuf, List<Object> list) throws Exception {           int i = byteBuf.readInt();           byte[] bytes = new byte[i];           byteBuf.readBytes(bytes);           MessageOutput messageOutput = JSON.parseObject(new String(bytes, CharsetUtil.UTF_8), MessageOutput.class);           MessageInput messageInput =                   new MessageInput(messageOutput.getRequestId(), messageOutput.getType(),(String) messageOutput.getPayload());           list.add(messageInput);       }*/    @Override    protected void decode(ChannelHandlerContext channelHandlerContext, ByteBuf byteBuf, List<Object> list) throws Exception {        short len = byteBuf.readShort();        System.err.println("len = " + len);        byte[] frame = new byte[len];        System.out.println(frame);        byteBuf.readBytes(frame);        response.ResponseBody responseBody = response.ResponseBody.parseFrom(frame);        list.add(responseBody);    }}