package com.sdp.self_rpc_done.publicInterface;import io.netty.buffer.ByteBuf;import io.netty.channel.ChannelHandlerContext;import io.netty.handler.codec.MessageToMessageCodec;import io.netty.util.CharsetUtil;import java.util.List;/*************************************************** * Copyright (C) didi_global * FileName:         ConsumerCodec * Author:           Sun Dongpo * Date:             2020/4/4 下午2:32 * Description:      客户端的编解码器 * Tele:             15029155474 * mail:             sundongpo_i@didiglobal.com ************************************************** */public class SelfCodec extends MessageToMessageCodec<ByteBuf, MessageOutput> {    @Override    protected void encode(ChannelHandlerContext ctx, MessageOutput msg, List<Object> out) throws Exception {//        ByteBuf buf = PooledByteBufAllocator.DEFAULT.buffer();//        msg.setPayload(JSON.toJSONString(msg.getPayload()));////        String str = JSON.toJSONString(msg);////        int length = str.getBytes().length;////        System.out.println("本次发送消息的长度为:"+length);////        buf.writeInt(length);////        buf.writeBytes(str.getBytes());////        out.add(buf);    }    @Override    protected void decode(ChannelHandlerContext channelHandlerContext, ByteBuf byteBuf, List<Object> list) throws Exception {////        int i = byteBuf.readInt();////        System.out.println("本次接收消息的长度为:"+length);//////        byte[] bytes = new byte[i];////        byteBuf.readBytes(bytes);////        MessageOutput messageOutput = JSON.parseObject(new String(bytes, CharsetUtil.UTF_8), MessageOutput.class);////        MessageInput messageInput =//                new MessageInput(messageOutput.getType(), messageOutput.getRequestId(), (String) messageOutput.getPayload());//        list.add(messageInput);    }    private void writeStr(ByteBuf buf, String s) {        buf.writeInt(s.length());        buf.writeBytes(s.getBytes(CharsetUtil.UTF_8));    }}